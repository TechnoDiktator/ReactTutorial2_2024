{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/10-classbasedcomponents/01-starting-project (7)/01-starting-project/src/components/Users.js\";\nimport { useState, Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: 'u1',\n  name: 'Max'\n}, {\n  id: 'u2',\n  name: 'Manuel'\n}, {\n  id: 'u3',\n  name: 'Julie'\n}];\nclass Users extends Component {\n  constructor() {\n    //with class based componenets your state\n    //ALWAYS has to be an object\n    super();\n    this.state = {\n      showUsers: true\n      //.....other states\n    };\n  }\n\n  //THIS IS HOW YOU CREATE THE METHODS\n  toggleUsersHandler() {\n    //this is the equivalent of the usestsate\n    //change what you want to \n    //rest of teh state variables/objs will be merged from the older stae\n    // this.setState({\n    //   showUsers: !this.state.showUsers\n\n    // })\n\n    //OR\n    //you can also do this\n    this.setState(currState => {\n      return {\n        showUsers: !currState.showUsers\n      };\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["useState","Component","User","classes","jsxDEV","_jsxDEV","DUMMY_USERS","id","name","Users","constructor","state","showUsers","toggleUsersHandler","setState","currState","render","className","users","children","onClick","bind","fileName","_jsxFileName","lineNumber","columnNumber","usersList"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/10-classbasedcomponents/01-starting-project (7)/01-starting-project/src/components/Users.js"],"sourcesContent":["import { useState, Component } from 'react';\nimport User from './User';\nimport classes from './Users.module.css';\n\nconst DUMMY_USERS = [\n  { id: 'u1', name: 'Max' },\n  { id: 'u2', name: 'Manuel' },\n  { id: 'u3', name: 'Julie' },\n];\n\n\n\nclass Users extends Component {\n  constructor(){\n    //with class based componenets your state\n    //ALWAYS has to be an object\n    super()\n    this.state = {\n      showUsers:true,\n      //.....other states\n    }\n  }\n\n  //THIS IS HOW YOU CREATE THE METHODS\n  toggleUsersHandler(){\n\n    //this is the equivalent of the usestsate\n    //change what you want to \n    //rest of teh state variables/objs will be merged from the older stae\n    // this.setState({\n    //   showUsers: !this.state.showUsers\n    \n    // })\n\n    //OR\n    //you can also do this\n    this.setState((currState) => {\n      return {\n        showUsers : !currState.showUsers\n      }\n    })\n\n  }\n  render(){\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? 'Hide' : 'Show'} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAG,CAClB;EAAEC,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAM,CAAC,EACzB;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC5B;EAAED,EAAE,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC5B;AAID,MAAMC,KAAK,SAASR,SAAS,CAAC;EAC5BS,WAAWA,CAAA,EAAE;IACX;IACA;IACA,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAC;MACV;IACF,CAAC;EACH;;EAEA;EACAC,kBAAkBA,CAAA,EAAE;IAElB;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA,IAAI,CAACC,QAAQ,CAAEC,SAAS,IAAK;MAC3B,OAAO;QACLH,SAAS,EAAG,CAACG,SAAS,CAACH;MACzB,CAAC;IACH,CAAC,CAAC;EAEJ;EACAI,MAAMA,CAAA,EAAE;IACN,oBACEX,OAAA;MAAKY,SAAS,EAAEd,OAAO,CAACe,KAAM;MAAAC,QAAA,gBAC5Bd,OAAA;QAAQe,OAAO,EAAE,IAAI,CAACP,kBAAkB,CAACQ,IAAI,CAAC,IAAI,CAAE;QAAAF,QAAA,GACjD,IAAI,CAACR,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACd,KAAK,CAACC,SAAS,IAAIc,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAGV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAehB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}