{"ast":null,"code":"import { createStore } from 'redux';\n\n//REDUX TOOLTIK\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n//EVERY REDUX TOOLKIT SLICE NEEDS A NAME\ncreateSlice({\n  name: 'counter',\n  initialState,\n  //our ostate object\n  reducers: {\n    //creating the reducer object\n    increment(state) {\n      //it may look like \n      //that we are editing the existing \n      //state \n      //but redux \n      //toolkit actualy is clonin\n      state.counter++;\n    },\n    decrement(state) {},\n    increase(state) {},\n    toggleCounter(state) {}\n  }\n});\nexport const INCREMENT = 'increment';\n\n//MODIFYING EXISTING STATE CAUSES THE SYSTEM TO HAVE \n//UNEXPECTED BEHAVIOUR\n\n//SO ALWAYS CREATE  BRAND NEW STATE OBJECT\n\n//NEVER MUTATE THE EXISTING STATE \n//ALWAYS CREATE A NEW STATE OBJECT WITH ALL THE PROPERTIES\n//EDIt THE PART OF THE OBJECT YOU WNTR TO CHANGE\nconst counteReducer = (state = initialState, action) => {\n  //avoid typos in action types\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n//this cinitializes the store\nconst store = createStore(counteReducer);\n\n//we willprovie this store\n//WHAT DOES PROVIDE MEAN\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggleCounter","INCREMENT","counteReducer","action","type","amount","store"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/14-reduxtry/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\n\n//REDUX TOOLTIK\nimport {createSlice} from '@reduxjs/toolkit'\n\n\n\nconst initialState = {counter:0 , showCounter : true}\n\n\n//EVERY REDUX TOOLKIT SLICE NEEDS A NAME\ncreateSlice({\n    name:'counter',\n    initialState , //our ostate object\n    reducers:{ //creating the reducer object\n        increment(state){\n            //it may look like \n            //that we are editing the existing \n            //state \n            //but redux \n            //toolkit actualy is clonin\n            state.counter++\n        },\n        decrement(state){},\n        increase(state){},\n        toggleCounter(state){}\n    },\n})\n\n\n\n\n\nexport const INCREMENT  = 'increment'\n\n\n//MODIFYING EXISTING STATE CAUSES THE SYSTEM TO HAVE \n//UNEXPECTED BEHAVIOUR\n\n//SO ALWAYS CREATE  BRAND NEW STATE OBJECT\n\n//NEVER MUTATE THE EXISTING STATE \n//ALWAYS CREATE A NEW STATE OBJECT WITH ALL THE PROPERTIES\n//EDIt THE PART OF THE OBJECT YOU WNTR TO CHANGE\nconst counteReducer = (state = initialState , action) => {\n\n    //avoid typos in action types\n    if(action.type === INCREMENT){\n        return {\n            counter:state.counter + 1 ,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === 'decrement'){\n        return {\n            counter:state.counter - 1,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === \"increase\"){\n         \n        return {\n            counter : state.counter + action.amount,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === 'toggle'){\n        return {\n            showCounter : !state.showCounter,\n            counter : state.counter\n        }\n    }\n    return state;\n}\n\n//this cinitializes the store\nconst store = createStore(counteReducer)\n\n\n//we willprovie this store\n//WHAT DOES PROVIDE MEAN\nexport default store\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;;AAEjC;AACA,SAAQC,WAAW,QAAO,kBAAkB;AAI5C,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAGC,WAAW,EAAG;AAAI,CAAC;;AAGrD;AACAH,WAAW,CAAC;EACRI,IAAI,EAAC,SAAS;EACdH,YAAY;EAAG;EACfI,QAAQ,EAAC;IAAE;IACPC,SAASA,CAACC,KAAK,EAAC;MACZ;MACA;MACA;MACA;MACA;MACAA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAC,CAAC,CAAC;IAClBE,QAAQA,CAACF,KAAK,EAAC,CAAC,CAAC;IACjBG,aAAaA,CAACH,KAAK,EAAC,CAAC;EACzB;AACJ,CAAC,CAAC;AAMF,OAAO,MAAMI,SAAS,GAAI,WAAW;;AAGrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAMC,aAAa,GAAGA,CAACL,KAAK,GAAGN,YAAY,EAAGY,MAAM,KAAK;EAErD;EACA,IAAGA,MAAM,CAACC,IAAI,KAAKH,SAAS,EAAC;IACzB,OAAO;MACHT,OAAO,EAACK,KAAK,CAACL,OAAO,GAAG,CAAC;MACzBC,WAAW,EAAGI,KAAK,CAACJ;IACxB,CAAC;EACL,CAAC,MAAK,IAAGU,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IACjC,OAAO;MACHZ,OAAO,EAACK,KAAK,CAACL,OAAO,GAAG,CAAC;MACzBC,WAAW,EAAGI,KAAK,CAACJ;IACxB,CAAC;EACL,CAAC,MAAK,IAAGU,MAAM,CAACC,IAAI,KAAK,UAAU,EAAC;IAEhC,OAAO;MACHZ,OAAO,EAAGK,KAAK,CAACL,OAAO,GAAGW,MAAM,CAACE,MAAM;MACvCZ,WAAW,EAAGI,KAAK,CAACJ;IACxB,CAAC;EACL,CAAC,MAAK,IAAGU,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IAC9B,OAAO;MACHX,WAAW,EAAG,CAACI,KAAK,CAACJ,WAAW;MAChCD,OAAO,EAAGK,KAAK,CAACL;IACpB,CAAC;EACL;EACA,OAAOK,KAAK;AAChB,CAAC;;AAED;AACA,MAAMS,KAAK,GAAGjB,WAAW,CAACa,aAAa,CAAC;;AAGxC;AACA;AACA,eAAeI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}