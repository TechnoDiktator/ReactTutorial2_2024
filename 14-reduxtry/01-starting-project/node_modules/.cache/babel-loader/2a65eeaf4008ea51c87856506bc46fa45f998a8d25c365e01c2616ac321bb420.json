{"ast":null,"code":"import { createStore } from 'redux';\nimport '@';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nexport const INCREMENT = 'increment';\n\n//MODIFYING EXISTING STATE CAUSES THE SYSTEM TO HAVE \n//UNEXPECTED BEHAVIOUR\n\n//SO ALWAYS CREATE  BRAND NEW STATE OBJECT\n\n//NEVER MUTATE THE EXISTING STATE \n//ALWAYS CREATE A NEW STATE OBJECT WITH ALL THE PROPERTIES\n//EDIt THE PART OF THE OBJECT YOU WNTR TO CHANGE\nconst counteReducer = (state = initialState, action) => {\n  //avoid typos in action types\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  } else if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n//this cinitializes the store\nconst store = createStore(counteReducer);\n\n//we willprovie this store\n//WHAT DOES PROVIDE MEAN\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","INCREMENT","counteReducer","state","action","type","amount","store"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/14-reduxtry/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux'\n\nimport {} from '@'\n\n\n\nconst initialState = {counter:0 , showCounter : true}\n\n\nexport const INCREMENT  = 'increment'\n\n\n//MODIFYING EXISTING STATE CAUSES THE SYSTEM TO HAVE \n//UNEXPECTED BEHAVIOUR\n\n//SO ALWAYS CREATE  BRAND NEW STATE OBJECT\n\n//NEVER MUTATE THE EXISTING STATE \n//ALWAYS CREATE A NEW STATE OBJECT WITH ALL THE PROPERTIES\n//EDIt THE PART OF THE OBJECT YOU WNTR TO CHANGE\nconst counteReducer = (state = initialState , action) => {\n\n    //avoid typos in action types\n    if(action.type === INCREMENT){\n        return {\n            counter:state.counter + 1 ,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === 'decrement'){\n        return {\n            counter:state.counter - 1,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === \"increase\"){\n         \n        return {\n            counter : state.counter + action.amount,\n            showCounter : state.showCounter\n        }\n    }else if(action.type === 'toggle'){\n        return {\n            showCounter : !state.showCounter,\n            counter : state.counter\n        }\n    }\n    return state;\n}\n\n//this cinitializes the store\nconst store = createStore(counteReducer)\n\n\n//we willprovie this store\n//WHAT DOES PROVIDE MEAN\nexport default store\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AAEjC,OAAe,GAAG;AAIlB,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAAGC,WAAW,EAAG;AAAI,CAAC;AAGrD,OAAO,MAAMC,SAAS,GAAI,WAAW;;AAGrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAGM,MAAM,KAAK;EAErD;EACA,IAAGA,MAAM,CAACC,IAAI,KAAKJ,SAAS,EAAC;IACzB,OAAO;MACHF,OAAO,EAACI,KAAK,CAACJ,OAAO,GAAG,CAAC;MACzBC,WAAW,EAAGG,KAAK,CAACH;IACxB,CAAC;EACL,CAAC,MAAK,IAAGI,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IACjC,OAAO;MACHN,OAAO,EAACI,KAAK,CAACJ,OAAO,GAAG,CAAC;MACzBC,WAAW,EAAGG,KAAK,CAACH;IACxB,CAAC;EACL,CAAC,MAAK,IAAGI,MAAM,CAACC,IAAI,KAAK,UAAU,EAAC;IAEhC,OAAO;MACHN,OAAO,EAAGI,KAAK,CAACJ,OAAO,GAAGK,MAAM,CAACE,MAAM;MACvCN,WAAW,EAAGG,KAAK,CAACH;IACxB,CAAC;EACL,CAAC,MAAK,IAAGI,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAC;IAC9B,OAAO;MACHL,WAAW,EAAG,CAACG,KAAK,CAACH,WAAW;MAChCD,OAAO,EAAGI,KAAK,CAACJ;IACpB,CAAC;EACL;EACA,OAAOI,KAAK;AAChB,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGV,WAAW,CAACK,aAAa,CAAC;;AAGxC;AACA;AACA,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}