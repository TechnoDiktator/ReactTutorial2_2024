{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      //redux toolkit is creating deepcopies of every thing that we are \n      //mutating here\n      //in the end a deepcopy is returned and the prev state is never edited\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      //we are not actually altering the prev state \n      //redux toolkit is creating a deepcopy\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        //remove\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        //decrease\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/15-advancedredux/01-starting-project (12)/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\n\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        totalQuantity:0\n    },\n    reducers:{\n        addItemToCart(state , action){\n            //redux toolkit is creating deepcopies of every thing that we are \n            //mutating here\n            //in the end a deepcopy is returned and the prev state is never edited\n            const newItem = action.payload\n            const existingItem = state.items.find((item) => item.id === newItem.id)\n            state.totalQuantity++\n            //we are not actually altering the prev state \n            //redux toolkit is creating a deepcopy\n            if(!existingItem){\n                state.items.push({\n                    itemId:newItem.id , \n                    price:newItem.price,\n                    quantity:newItem.quantity,\n                    totalPrice:newItem.price,\n                    name: newItem.title,\n                })\n            }else{\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\n\n\n            }\n        },\n\n        removeItemFromCart(state , action){\n            const id = action.payload\n            const existingItem = state.items.find(item => item.id === id)\n            state.totalQuantity--\n            if(existingItem.quantity === 1){\n                //remove\n                state.items = state.items.filter(item => item.id !== id)\n            }else{\n                //decrease\n                existingItem.quantity--\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        }\n\n\n    }\n    \n})\nexport const cartActions = cartSlice.actions\nexport default cartSlice\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAI5C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAC;IACLC,aAAaA,CAACC,KAAK,EAAGC,MAAM,EAAC;MACzB;MACA;MACA;MACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACH,aAAa,EAAE;MACrB;MACA;MACA,IAAG,CAACO,YAAY,EAAC;QACbJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbC,MAAM,EAACP,OAAO,CAACK,EAAE;UACjBG,KAAK,EAACR,OAAO,CAACQ,KAAK;UACnBC,QAAQ,EAACT,OAAO,CAACS,QAAQ;UACzBC,UAAU,EAACV,OAAO,CAACQ,KAAK;UACxBhB,IAAI,EAAEQ,OAAO,CAACW;QAClB,CAAC,CAAC;MACN,CAAC,MAAI;QACDT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MAGrE;IACJ,CAAC;IAEDI,kBAAkBA,CAACd,KAAK,EAAGC,MAAM,EAAC;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGO,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAC;QAC3B;QACAX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAI;QACD;QACAH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACM,KAAK;MAC1E;IACJ;EAGJ;AAEJ,CAAC,CAAC;AACF,OAAO,MAAMM,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAC5C,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}