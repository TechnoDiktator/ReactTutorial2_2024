{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      //redux toolkit is creating deepcopies of every thing that we are \n      //mutating here\n      //in the end a deepcopy is returned and the prev state is never edited\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      //we are not actually altering the prev state \n      //redux toolkit is creating a deepcopy\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        //remove\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        //decrease\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n/* =======================CRETING OUR OWN ACTIOn CREATOR====================================================\n\nWE CAN ALSO CREATE OUR OWN ACTION CREATOR METHODS \nWHEN WORKING WITH REDUX TOOLKIT\n*/\nconst sendCartdata = cart => {\n  //we can make it async as well to deal with side effects\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: \"Sending cart data\"\n    }));\n    const response = await fetch('https://freeproject-59eb8-default-rtdb.firebaseio.com/cart.json', {\n      method: \"PUT\",\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      // dispatch(uiActions.showNotification({\n      //   status:'Failure',\n      //   title:'Data not Sent...',\n      //   message:\"Failed update\"\n      // }))\n\n      throw new Error(\"Updating cart data failed\");\n    }\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Data Sent...',\n      message: \"Successfully updated\"\n    }));\n  };\n};\n//=============================================================================\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartdata","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/15-advancedredux/01-starting-project (12)/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport { uiActions } from './ui-slice'\n\n\n\nconst cartSlice = createSlice({\n    name:'cart',\n    initialState:{\n        items:[],\n        totalQuantity:0\n    },\n    reducers:{\n        replaceCart(state , action){\n            state.totalQuantity = action.payload.totalQuantity\n            state.items = action.payload.items\n        },\n\n        addItemToCart(state , action){\n            //redux toolkit is creating deepcopies of every thing that we are \n            //mutating here\n            //in the end a deepcopy is returned and the prev state is never edited\n            const newItem = action.payload\n            const existingItem = state.items.find((item) => item.id === newItem.id)\n            state.totalQuantity++\n            //we are not actually altering the prev state \n            //redux toolkit is creating a deepcopy\n            if(!existingItem){\n                state.items.push({\n                    id:newItem.id , \n                    price:newItem.price,\n                    quantity:newItem.quantity,\n                    totalPrice:newItem.price,\n                    name: newItem.title,\n                })\n            }else{\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\n\n\n            }\n        },\n\n        removeItemFromCart(state , action){\n            const id = action.payload\n            const existingItem = state.items.find(item => item.id === id)\n            state.totalQuantity--\n            if(existingItem.quantity === 1){\n                //remove\n                state.items = state.items.filter(item => item.id !== id)\n            }else{\n                //decrease\n                existingItem.quantity--\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n            }\n        }\n\n\n    }\n    \n})\n\n\n/* =======================CRETING OUR OWN ACTIOn CREATOR====================================================\n\nWE CAN ALSO CREATE OUR OWN ACTION CREATOR METHODS \nWHEN WORKING WITH REDUX TOOLKIT\n*/\nconst sendCartdata = (cart) => {\n    //we can make it async as well to deal with side effects\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status:'pending',\n            title:'Sending...',\n            message:\"Sending cart data\"\n        }))\n\n        const response = await fetch('https://freeproject-59eb8-default-rtdb.firebaseio.com/cart.json' , \n            { method:\"PUT\",\n              body:JSON.stringify(cart)\n            } \n          )\n          \n        if(!response.ok){\n            \n        // dispatch(uiActions.showNotification({\n        //   status:'Failure',\n        //   title:'Data not Sent...',\n        //   message:\"Failed update\"\n        // }))\n        \n        throw new Error(\"Updating cart data failed\")\n        }\n    \n      \n        dispatch(uiActions.showNotification({\n            status:'success',\n            title:'Data Sent...',\n            message:\"Successfully updated\"\n        }))\n\n    }\n\n\n}\n//=============================================================================\n\n\nexport const cartActions = cartSlice.actions\nexport default cartSlice\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,YAAY;AAItC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAC;IACLC,WAAWA,CAACC,KAAK,EAAGC,MAAM,EAAC;MACvBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACtC,CAAC;IAEDO,aAAaA,CAACH,KAAK,EAAGC,MAAM,EAAC;MACzB;MACA;MACA;MACA,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvER,KAAK,CAACH,aAAa,EAAE;MACrB;MACA;MACA,IAAG,CAACQ,YAAY,EAAC;QACbL,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UACbD,EAAE,EAACJ,OAAO,CAACI,EAAE;UACbE,KAAK,EAACN,OAAO,CAACM,KAAK;UACnBC,QAAQ,EAACP,OAAO,CAACO,QAAQ;UACzBC,UAAU,EAACR,OAAO,CAACM,KAAK;UACxBhB,IAAI,EAAEU,OAAO,CAACS;QAClB,CAAC,CAAC;MACN,CAAC,MAAI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MAGrE;IACJ,CAAC;IAEDI,kBAAkBA,CAACd,KAAK,EAAGC,MAAM,EAAC;MAC9B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGQ,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAC;QAC3B;QACAX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACmB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAI;QACD;QACAH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EAGJ;AAEJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA,MAAMM,YAAY,GAAIC,IAAI,IAAK;EAC3B;EACA,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC1B,SAAS,CAAC2B,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBP,KAAK,EAAC,YAAY;MAClBQ,OAAO,EAAC;IACZ,CAAC,CAAC,CAAC;IAEH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,EAC1F;MAAEC,MAAM,EAAC,KAAK;MACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC1B,CACF,CAAC;IAEH,IAAG,CAACK,QAAQ,CAACM,EAAE,EAAC;MAEhB;MACA;MACA;MACA;MACA;;MAEA,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC5C;IAGAX,QAAQ,CAAC1B,SAAS,CAAC2B,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBP,KAAK,EAAC,cAAc;MACpBQ,OAAO,EAAC;IACZ,CAAC,CAAC,CAAC;EAEP,CAAC;AAGL,CAAC;AACD;;AAGA,OAAO,MAAMS,WAAW,GAAGrC,SAAS,CAACsC,OAAO;AAC5C,eAAetC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}