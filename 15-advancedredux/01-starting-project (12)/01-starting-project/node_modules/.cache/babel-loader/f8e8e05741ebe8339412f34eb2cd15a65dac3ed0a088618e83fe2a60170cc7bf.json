{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/15-advancedredux/01-starting-project (12)/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notification from './components/UI/Notification';\nimport { Fragment, useEffect, useState } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitialRender = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      // dispatch(uiActions.showNotification({\n      //   status:'pending',\n      //   title:'Sending...',\n      //   message:\"Sending cart data\"\n      // }))\n      // const response = await fetch('https://freeproject-59eb8-default-rtdb.firebaseio.com/cart.json' , \n      //   { method:\"PUT\",\n      //     body:JSON.stringify(cart)\n      //   } \n      // )\n\n      // if(!response.ok){\n\n      //   // dispatch(uiActions.showNotification({\n      //   //   status:'Failure',\n      //   //   title:'Data not Sent...',\n      //   //   message:\"Failed update\"\n      //   // }))\n\n      //   throw new Error(\"Updating cart data failed\")\n      // }\n\n      // dispatch(uiActions.showNotification({\n      //   status:'success',\n      //   title:'Data Sent...',\n      //   message:\"Successfully updated\"\n      // }))\n    };\n    if (isInitialRender) {\n      isInitialRender = false;\n      return;\n    }\n    // sendCartData().catch((error) => {\n    //   dispatch(uiActions.showNotification({\n    //     status:'error',\n    //     title:'Data not Sent...',\n    //     message:\"Failed update\"\n    //   }))\n    // })\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","useSelector","useDispatch","Notification","Fragment","useEffect","useState","uiActions","jsxDEV","_jsxDEV","isInitialRender","App","_s","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/15-advancedredux/01-starting-project (12)/01-starting-project/src/App.js"],"sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nimport { useSelector  , useDispatch} from 'react-redux';\nimport Notification from './components/UI/Notification'\nimport {Fragment,useEffect , useState} from 'react'\nimport { uiActions } from './store/ui-slice';\nlet isInitialRender = true\nfunction App() {\n  const dispatch = useDispatch()\n  const showCart = useSelector((state) => state.ui.cartIsVisible)\n  const cart = useSelector(state => state.cart)\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(()=> {\n    const sendCartData = async () => {\n      // dispatch(uiActions.showNotification({\n      //   status:'pending',\n      //   title:'Sending...',\n      //   message:\"Sending cart data\"\n      // }))\n      // const response = await fetch('https://freeproject-59eb8-default-rtdb.firebaseio.com/cart.json' , \n      //   { method:\"PUT\",\n      //     body:JSON.stringify(cart)\n      //   } \n      // )\n      \n      // if(!response.ok){\n          \n      //   // dispatch(uiActions.showNotification({\n      //   //   status:'Failure',\n      //   //   title:'Data not Sent...',\n      //   //   message:\"Failed update\"\n      //   // }))\n        \n      //   throw new Error(\"Updating cart data failed\")\n      // }\n\n      \n      // dispatch(uiActions.showNotification({\n      //   status:'success',\n      //   title:'Data Sent...',\n      //   message:\"Successfully updated\"\n      // }))\n\n    }\n    if(isInitialRender){\n      isInitialRender = false\n      return \n    }\n    // sendCartData().catch((error) => {\n    //   dispatch(uiActions.showNotification({\n    //     status:'error',\n    //     title:'Data not Sent...',\n    //     message:\"Failed update\"\n    //   }))\n    // })\n\n  \n  } , [cart , dispatch])\n  \n\n  return (\n    <Fragment>\n      {notification && <Notification status = {notification.status} title = {notification.title} message = {notification.message}></Notification>}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AAEjD,SAASC,WAAW,EAAIC,WAAW,QAAO,aAAa;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAAQC,QAAQ,EAACC,SAAS,EAAGC,QAAQ,QAAO,OAAO;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,IAAIC,eAAe,GAAG,IAAI;AAC1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGjB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACG,IAAI,CAAC;EAC7C,MAAMC,YAAY,GAAGlB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACG,YAAY,CAAC;EAEhEd,SAAS,CAAC,MAAK;IACb,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAGA;MACA;MACA;MACA;MACA;IAAA,CAED;IACD,IAAGV,eAAe,EAAC;MACjBA,eAAe,GAAG,KAAK;MACvB;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGF,CAAC,EAAG,CAACQ,IAAI,EAAGL,QAAQ,CAAC,CAAC;EAGtB,oBACEJ,OAAA,CAACL,QAAQ;IAAAiB,QAAA,GACNF,YAAY,iBAAIV,OAAA,CAACN,YAAY;MAACmB,MAAM,EAAIH,YAAY,CAACG,MAAO;MAACC,KAAK,EAAIJ,YAAY,CAACI,KAAM;MAACC,OAAO,EAAIL,YAAY,CAACK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAC3InB,OAAA,CAACV,MAAM;MAAAsB,QAAA,GACJP,QAAQ,iBAAIL,OAAA,CAACX,IAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBnB,OAAA,CAACT,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAAChB,EAAA,CA/DQD,GAAG;EAAA,QACOT,WAAW,EACXD,WAAW,EACfA,WAAW,EACHA,WAAW;AAAA;AAAA4B,EAAA,GAJzBlB,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}