{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventActiom } from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport { action as ManipulateEventAction } from './components/EventForm';\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { loader as eventsLoader } from './pages/Events';\nimport ErrorPage from './pages/ErrorPage';\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\n\n//so we are creating routes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([\n//we are going to use relative paths\n\n{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 18\n  }, this),\n  children: [{\n    path: '',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 34\n    }, this),\n    children: [{\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }, this),\n      //in case of error on a page the closest error in the route configuration elemnt os executed\n      errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }, this),\n      loader: eventsLoader\n\n      //we can delacre the loader in the route object as below also\n      //async () => {\n      //a loader function just gets executed when someone visits that route\n      //even though the fucntion below is returniing a promise\n      //react reouter dom knpws and will give you the resolved result \n      //when it is done\n      //ot will make the result of such a function available when someone visits such a page\n      // const response = await fetch('http://localhost:8080/events');\n\n      //   if (!response.ok) {\n      //     //\n      //   } else {\n      //     const resData = await response.json();\n      //     return resData.events\n      //     //\n      //   }\n      // } \n    }, {\n      path: \":eventId\",\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this),\n        action: deleteEventActiom\n      }, {\n        //the id property \n        //gives us the way to pass loader\n        //data to the child route\n        path: \"edit\",\n        action: ManipulateEventAction,\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this)\n      }]\n    }, {\n      path: \"new\",\n      action: ManipulateEventAction,\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 22\n      }, this)\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","loader","eventDetailLoader","action","deleteEventActiom","NewEventPage","ManipulateEventAction","EditEventPage","RootLayout","EventsRootLayout","eventsLoader","ErrorPage","NewsletterPage","newsletterAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","id","App","_c","$RefreshReg$"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n\n\nimport {createBrowserRouter ,  RouterProvider } from 'react-router-dom';\nimport HomePage from './pages/Home';\nimport EventsPage from './pages/Events';\nimport EventDetailPage , {loader as eventDetailLoader , action as deleteEventActiom} from './pages/EventDetail';\nimport NewEventPage from './pages/NewEvent';\nimport {action as ManipulateEventAction} from './components/EventForm'\n\n\nimport EditEventPage from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\n\nimport {loader as eventsLoader} from './pages/Events' \nimport ErrorPage from './pages/ErrorPage';\nimport NewsletterPage, { action as newsletterAction } from './pages/Newsletter';\n\n//so we are creating routes\nconst router = createBrowserRouter([\n  //we are going to use relative paths\n  \n  {path:'/', \n    element:<RootLayout></RootLayout>  , \n    errorElement:<ErrorPage></ErrorPage>,\n    children: [\n      {path:'' , element : <HomePage></HomePage> } ,\n\n      {\n        path:'events' , element: <EventsRootLayout></EventsRootLayout> ,\n        \n        children:[\n          {\n            path:\"\" , \n            element : <EventsPage></EventsPage> , \n            //in case of error on a page the closest error in the route configuration elemnt os executed\n            errorElement:<ErrorPage></ErrorPage>,\n            loader: eventsLoader\n\n            //we can delacre the loader in the route object as below also\n            //async () => {\n            //a loader function just gets executed when someone visits that route\n            //even though the fucntion below is returniing a promise\n            //react reouter dom knpws and will give you the resolved result \n            //when it is done\n            //ot will make the result of such a function available when someone visits such a page\n            // const response = await fetch('http://localhost:8080/events');\n\n            //   if (!response.ok) {\n            //     //\n            //   } else {\n            //     const resData = await response.json();\n            //     return resData.events\n            //     //\n            //   }\n            // } \n          } , \n          \n          \n          \n          {path: \":eventId\", \n            id:'event-detail',\n            loader:eventDetailLoader,\n            \n            children:[\n\n            {\n              path: \"\" , \n              element : <EventDetailPage></EventDetailPage>,\n              action:deleteEventActiom\n            } , \n\n            {\n              //the id property \n              //gives us the way to pass loader\n              //data to the child route\n              path:\"edit\" , \n              action:ManipulateEventAction,\n              element: <EditEventPage></EditEventPage>\n            }\n\n          ]},\n\n          {\n            path:\"new\" , \n            action:ManipulateEventAction,\n            element :<NewEventPage></NewEventPage> \n          } , \n\n        ]\n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage />,\n        action: newsletterAction,\n      },\n    ]\n  },\n]\n\n\n\n)\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}