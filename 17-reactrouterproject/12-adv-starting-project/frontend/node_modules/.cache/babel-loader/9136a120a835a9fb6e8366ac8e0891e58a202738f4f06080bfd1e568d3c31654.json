{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/NewEvent.jsx\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"New Events page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 12\n  }, this);\n}\n\n//like loader for actions also provides some implicit things when an actiojn is called\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n\n  //mane attributes of all form fileds\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    metho: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw {\n      status: 500,\n      message: \"Could not post fdata\"\n    };\n  } else {\n    //after submitting form successfully\n    return redirect('');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","jsxDEV","_jsxDEV","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","metho","body","JSON","stringify","headers","ok","status","message","$RefreshReg$"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/NewEvent.jsx"],"sourcesContent":["import { redirect } from \"react-router-dom\"\n\nexport default function  NewEventPage() {\n    return <h1>\n        New Events page\n    </h1>\n}\n\n//like loader for actions also provides some implicit things when an actiojn is called\nexport async function action({request , params}) {\n    \n    const data = await request.formData()\n    \n    //mane attributes of all form fileds\n    const eventData  = {\n        title:data.get('title'),\n        image:data.get('image'),\n        date:data.get('date'),\n        description:data.get('description')\n    }\n    \n    const response = await fetch('http://localhost:8080/events',{\n        metho:'POST',\n        body:JSON.stringify(eventData),\n        headers:{\n            'Content-Type':'application/json'\n        }\n    })\n\n    if(!response.ok){\n        throw {status:500 , message:\"Could not post fdata\"}\n    }else{\n        //after submitting form successfully\n        return redirect('')\n    }\n\n\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAAUC,YAAYA,CAAA,EAAG;EACpC,oBAAOD,OAAA;IAAAE,QAAA,EAAI;EAEX;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AACT;;AAEA;AAAAC,EAAA,GANyBN,YAAY;AAOrC,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAAGC;AAAM,CAAC,EAAE;EAE7C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;;EAErC;EACA,MAAMC,SAAS,GAAI;IACfC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EACtC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,KAAK,EAAC,MAAM;IACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC;IAC9BY,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC;EAEF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM;MAACC,MAAM,EAAC,GAAG;MAAGC,OAAO,EAAC;IAAsB,CAAC;EACvD,CAAC,MAAI;IACD;IACA,OAAO9B,QAAQ,CAAC,EAAE,CAAC;EACvB;AAGJ;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}