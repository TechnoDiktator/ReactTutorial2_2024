{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/Events.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\n\n//this will help us get the closest loader functions data\n\nimport { useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  //getting loaders answer\n  const events = useLoaderData();\n\n  //AS WE HAAVE USED THE LOADER FUNCTION TO GET THE RESULT OF THE \n  //BELOW API HIT \n  //WE DONT NEED TO USE useEFFECT ANY MORE\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const [fetchedEvents, setFetchedEvents] = useState();\n  //   const [error, setError] = useState();\n\n  //   useEffect(() => {\n  //     async function fetchEvents() {\n  //       setIsLoading(true);\n  //       const response = await fetch('http://localhost:8080/events');\n\n  //       if (!response.ok) {\n  //         setError('Fetching events failed.');\n  //       } else {\n  //         const resData = await response.json();\n  //         setFetchedEvents(resData.events);\n  //       }\n  //       setIsLoading(false);\n  //     }\n\n  //     fetchEvents();\n  //   }, []);\n\n  return (\n    /*#__PURE__*/\n    //so now we dont have any hooks or states ...how do \n    //we acheive the smawe fuctionality that we had\n    // <>\n    // <div style={{ textAlign: 'center' }}>\n    //     {isLoading && <p>Loading...</p>}\n    //     {error && <p>{error}</p>}\n    // </div>\n    // {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n    // </>\n    _jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/Events.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\n\n\n//this will help us get the closest loader functions data\n\nimport { useLoaderData } from 'react-router-dom';\n\n\n\nfunction EventsPage() {\n    //getting loaders answer\n    const events = useLoaderData()\n    \n    \n    //AS WE HAAVE USED THE LOADER FUNCTION TO GET THE RESULT OF THE \n    //BELOW API HIT \n    //WE DONT NEED TO USE useEFFECT ANY MORE\n    //   const [isLoading, setIsLoading] = useState(false);\n    //   const [fetchedEvents, setFetchedEvents] = useState();\n    //   const [error, setError] = useState();\n\n    //   useEffect(() => {\n    //     async function fetchEvents() {\n    //       setIsLoading(true);\n    //       const response = await fetch('http://localhost:8080/events');\n\n    //       if (!response.ok) {\n    //         setError('Fetching events failed.');\n    //       } else {\n    //         const resData = await response.json();\n    //         setFetchedEvents(resData.events);\n    //       }\n    //       setIsLoading(false);\n    //     }\n\n    //     fetchEvents();\n    //   }, []);\n    \n\n\n    return (\n        //so now we dont have any hooks or states ...how do \n        //we acheive the smawe fuctionality that we had\n        // <>\n        // <div style={{ textAlign: 'center' }}>\n        //     {isLoading && <p>Loading...</p>}\n        //     {error && <p>{error}</p>}\n        // </div>\n        // {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n        // </>\n\n        <EventsList events={events}></EventsList>\n\n    );\n}\n\n\n\n\n\n\nexport default EventsPage;"],"mappings":";;AAAA;;AAEA,OAAOA,UAAU,MAAM,0BAA0B;;AAGjD;;AAEA,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAMC,MAAM,GAAGL,aAAa,CAAC,CAAC;;EAG9B;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAIA;IAAA;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAE,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;AAGjD;AAACL,EAAA,CA7CQD,UAAU;EAAA,QAEAH,aAAa;AAAA;AAAAU,EAAA,GAFvBP,UAAU;AAoDnB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}