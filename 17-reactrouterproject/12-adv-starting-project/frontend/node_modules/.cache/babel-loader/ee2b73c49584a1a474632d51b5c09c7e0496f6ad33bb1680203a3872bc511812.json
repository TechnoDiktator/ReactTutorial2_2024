{"ast":null,"code":"var _jsxFileName = \"/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/Root.jsx\";\nimport MainNavigation from '../components/MainNavigation';\nimport { Outlet, useNavigation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RootLayout() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n/*\nThe RootLayout is typically a parent or wrapper component that provides structure and shared functionality across multiple routes in your application. Common uses include:\n\nLayout Styling: Defining the main structure of the application, such as headers, footers, and sidebars.\nShared State: Providing context or state that is accessible to all nested components (e.g., authentication, theme settings).\nPersistent UI Elements: Ensuring components like navigation bars remain visible across all routes.\nimport { Outlet } from \"react-router-dom\";\n\nfunction RootLayout() {\n  return (\n    <div className=\"app-layout\">\n      <header>Header</header>\n      <main>\n        <Outlet /> //* This is where child routes are rendered\n        </main>\n        <footer>Footer</footer>\n      </div>\n    );\n  }\n  \n  export default RootLayout;\n\n\n*/\n_c = RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");","map":{"version":3,"names":["MainNavigation","Outlet","useNavigation","jsxDEV","_jsxDEV","Fragment","_Fragment","RootLayout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tarang/Desktop/Projects/DEV/react/ReactTutorial2_2024/17-reactrouterproject/12-adv-starting-project/frontend/src/pages/Root.jsx"],"sourcesContent":["import MainNavigation from  '../components/MainNavigation'\n\nimport { Outlet , useNavigation } from 'react-router-dom';\n\nexport default function RootLayout(){\n\n    \n\n\n\n    \n    return(\n        <>\n            <MainNavigation></MainNavigation>\n            \n            <main>\n                {/*this defines where the childroutes/pages should berendered  \n                after the render of the root route */}\n                <Outlet></Outlet>\n            </main>\n\n        </>\n    )\n\n\n}\n\n/*\nThe RootLayout is typically a parent or wrapper component that provides structure and shared functionality across multiple routes in your application. Common uses include:\n\nLayout Styling: Defining the main structure of the application, such as headers, footers, and sidebars.\nShared State: Providing context or state that is accessible to all nested components (e.g., authentication, theme settings).\nPersistent UI Elements: Ensuring components like navigation bars remain visible across all routes.\nimport { Outlet } from \"react-router-dom\";\n\nfunction RootLayout() {\n  return (\n    <div className=\"app-layout\">\n      <header>Header</header>\n      <main>\n        <Outlet /> //* This is where child routes are rendered\n        </main>\n        <footer>Footer</footer>\n      </div>\n    );\n  }\n  \n  export default RootLayout;\n\n\n*/\n\n\n\n\n"],"mappings":";AAAA,OAAOA,cAAc,MAAO,8BAA8B;AAE1D,SAASC,MAAM,EAAGC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,eAAe,SAASC,UAAUA,CAAA,EAAE;EAOhC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA,CAACJ,cAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,eAEjCR,OAAA;MAAAI,QAAA,eAGIJ,OAAA,CAACH,MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eAET,CAAC;AAIX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBAC,EAAA,GAvBwBN,UAAU;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}